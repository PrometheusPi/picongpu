/**
 * Copyright 2013-2014 Heiko Burau, Rene Widera, Richard Pausch
 *
 * This file is part of PIConGPU. 
 * 
 * PIConGPU is free software: you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by 
 * the Free Software Foundation, either version 3 of the License, or 
 * (at your option) any later version. 
 * 
 * PIConGPU is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 * GNU General Public License for more details. 
 * 
 * You should have received a copy of the GNU General Public License 
 * along with PIConGPU.  
 * If not, see <http://www.gnu.org/licenses/>. 
 */ 
 

#pragma once

namespace picongpu
{
  namespace radiation_observer
  {
    /** Compute observation angles 
     *
     * This function is used in the Radiation plug-in kernel to compute 
     * the observation directions given as a unit vector pointing
     * towards a 'virtual' detector
     *
     * @param    observation_id_extern
     *           int index that identifies each block on the GPU
     *           to compute the observation direction
     *
     * @return   unit vector pointing in observation direction
     *           type: vec2
     * 
     */
    DINLINE vec2 observation_direction(const int observation_id_extern)
    {


      const int N_phi_split = 32;
      const int N_theta = 16;

      const int my_index_theta = observation_id_extern / N_phi_split;
      const int my_index_phi = observation_id_extern % N_phi_split;

      const numtype2 phi_range   = picongpu::PI;
      const numtype2 theta_range = picongpu::PI/2.0;

      const numtype2 delta_phi   = phi_range   / (N_phi_split - 1);
      const numtype2 delta_theta = theta_range / (N_theta - 1);

      const numtype2 theta(  my_index_theta * delta_theta  + 0.5*picongpu::PI ); // off axis angle
      const numtype2 phi(    my_index_phi   * delta_phi  ); // off axis angle

      return vec2( sinf(theta)*cosf(phi) , sinf(theta)*sinf(phi) , cosf(theta) ) ;


    }
    
  } // end namespace radiation_observer
} // end namespace picongpu
