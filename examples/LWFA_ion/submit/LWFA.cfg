#!/bin/bash
# Copyright 2013-2014 Axel Huebl, Felix Schmitt
# 
# This file is part of PIConGPU. 
# 
# PIConGPU is free software: you can redistribute it and/or modify 
# it under the terms of the GNU General Public License as published by 
# the Free Software Foundation, either version 3 of the License, or 
# (at your option) any later version. 
# 
# PIConGPU is distributed in the hope that it will be useful, 
# but WITHOUT ANY WARRANTY; without even the implied warranty of 
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
# GNU General Public License for more details. 
# 
# You should have received a copy of the GNU General Public License 
# along with PIConGPU.  
# If not, see <http://www.gnu.org/licenses/>. 
# 
 
##
## This configuration file is used by PIConGPU's TBG tool to create a
## batch script for PIConGPU runs. For a detailed description of PIConGPU
## configuration files including all available variables, see
##
##                      doc/TBG_macros.cfg
##


#################################
## Section: Required Variables ##
#################################

TBG_wallTime="150:00:00"

TBG_gpu_x=4
TBG_gpu_y=7
TBG_gpu_z=4

#TBG_gridSize="-g 768 3080 768"
#TBG_gridSize="-g 576 3080 576"
TBG_gridSize="-g 704 2352 704"
#TBG_gridSize="-g 320 1680 320"
TBG_steps="-s 90000"
#TBG_steps="-s 10000"

# leave TBG_movingWindow empty to disable moving window
TBG_movingWindow="-m"

#################################
## Section: Optional Variables ##
#################################

#TBG_plugins="!TBG_pngYX                    \
#              !TBG_pngYZ                    \
#              --elec_cnt.period 100"

# Create 2D images in PNG format every .period steps.
# Images can be created for the following particle species:
# - Electrons (--e_png)
# - Ions (--i_png)
# The slice plane is defined using .axis [yx,yz] and .slicePoint (offset from origin
# as a float within [0.0,1.0].
# The output folder can be set with .folder.
# Can be used more than once to print different images, e.g. for YZ and YX planes.
TBG_E_pngYZ="--e_png.period 1000 --e_png.axis yz --e_png.slicePoint 0.5 --e_png.folder pngElectronsYZ"
TBG_E_pngYX="--e_png.period 1000 --e_png.axis yx --e_png.slicePoint 0.5 --e_png.folder pngElectronsYX"
TBG_EN_pngYZ="--en_png.period 1000 --en_png.axis yz --en_png.slicePoint 0.5 --en_png.folder pngElectronsYZ"
TBG_EN_pngYX="--en_png.period 1000 --en_png.axis yx --en_png.slicePoint 0.5 --en_png.folder pngElectronsYX"

# Create a particle-energy histogram [in keV] every .period steps for:
# - Electrons (--energyHistogram_e)
# - Ions (--energyHistogram_i)
TBG_BIN_e="--e_energyHistogram.period 50 --e_energyHistogram.maxEnergy 800000"
# --e_energyHistogram.distanceToDetector 0.3 --e_energyHistogram.slitDetectorX 0.04 --e_energyHistogram.slitDetectorZ 0.04"
TBG_BIN_eN="--en_energyHistogram.period 50 --en_energyHistogram.maxEnergy 800000"
# --en_energyHistogram.distanceToDetector 0.3 --en_energyHistogram.slitDetectorX 0.04 --en_energyHistogram.slitDetectorZ 0.04"

# Calculate a 2D phase space
# - requires parallel libSplash for HDF5 output
# - momentum range in m_e c
TGB_ePSxpx="--e_phaseSpace.period 1000 --e_phaseSpace.space x --e_phaseSpace.momentum px --e_phaseSpace.min -5.0 --e_phaseSpace.max 5.0"
TGB_ePSxpz="--e_phaseSpace.period 1000 --e_phaseSpace.space x --e_phaseSpace.momentum pz --e_phaseSpace.min -5.0 --e_phaseSpace.max 5.0"
TGB_ePSypx="--e_phaseSpace.period 1000 --e_phaseSpace.space y --e_phaseSpace.momentum px --e_phaseSpace.min -5.0 --e_phaseSpace.max 5.0"
TGB_ePSypz="--e_phaseSpace.period 1000 --e_phaseSpace.space y --e_phaseSpace.momentum pz --e_phaseSpace.min -5.0 --e_phaseSpace.max 5.0"
TGB_ePSxpy="--e_phaseSpace.period 1000 --e_phaseSpace.space x --e_phaseSpace.momentum py --e_phaseSpace.min -10.0 --e_phaseSpace.max 1500.0"
TGB_ePSypy="--e_phaseSpace.period 1000 --e_phaseSpace.space y --e_phaseSpace.momentum py --e_phaseSpace.min -10.0 --e_phaseSpace.max 1500.0"
TGB_ePSzpy="--e_phaseSpace.period 1000 --e_phaseSpace.space z --e_phaseSpace.momentum py --e_phaseSpace.min -10.0 --e_phaseSpace.max 1500.0"
TGB_enPSxpx="--en_phaseSpace.period 1000 --en_phaseSpace.space x --en_phaseSpace.momentum px --en_phaseSpace.min -5.0 --en_phaseSpace.max 5.0"
TGB_enPSxpz="--en_phaseSpace.period 1000 --en_phaseSpace.space x --en_phaseSpace.momentum pz --en_phaseSpace.min -5.0 --en_phaseSpace.max 5.0"
TGB_enPSypx="--en_phaseSpace.period 1000 --en_phaseSpace.space y --en_phaseSpace.momentum px --en_phaseSpace.min -5.0 --en_phaseSpace.max 5.0"
TGB_enPSypz="--en_phaseSpace.period 1000 --en_phaseSpace.space y --en_phaseSpace.momentum pz --en_phaseSpace.min -5.0 --en_phaseSpace.max 5.0"
TGB_enPSxpy="--en_phaseSpace.period 1000 --en_phaseSpace.space x --en_phaseSpace.momentum py --en_phaseSpace.min -10.0 --en_phaseSpace.max 1500.0"
TGB_enPSypy="--en_phaseSpace.period 1000 --en_phaseSpace.space y --en_phaseSpace.momentum py --en_phaseSpace.min -10.0 --en_phaseSpace.max 1500.0"
TGB_enPSzpy="--en_phaseSpace.period 1000 --en_phaseSpace.space z --en_phaseSpace.momentum py --en_phaseSpace.min -10.0 --en_phaseSpace.max 1500.0"


# Sum up total energy every .period steps for
# - Electrons (--e_energy)
# - Ions (--i_energy)
# - Fields (--fields_energy)
TBG_sumEnergy="--fields_energy.period 100 --e_energy.period 100 --en_energy.period 100  --n_energy.period 100"

# Dump simulation data (fields and particles) to HDF5 files using libSplash.
# Data is dumped every .period steps to the fileset .file.
TBG_HDF5="--hdf5.period 5000 --hdf5.file simData"

TBG_radiation_He=" "
#"--e_radiation.period 1 --e_radiation.dump 100 --e_radiation.totalRadiation --e_radiation.lastRadiation"
TBG_radiation_N=" "
#"--en_radiation.period 1 --en_radiation.dump 100 --en_radiation.totalRadiation --en_radiation.lastRadiation"

TBG_plugins="!TBG_E_pngYX                    \
              !TBG_E_pngYZ                   \
              !TBG_BIN_e                     \
              !TBG_EN_pngYX                  \
              !TBG_EN_pngYZ                  \
              !TBG_BIN_eN                    \
              !TGB_ePSxpx                    \
              !TGB_ePSxpz                    \
              !TGB_ePSypx                    \
              !TGB_ePSypy                    \
              !TGB_ePSypz                    \
              !TGB_ePSxpy                    \
              !TGB_ePSzpy                    \
              !TGB_enPSxpx                   \
              !TGB_enPSxpz                   \
              !TGB_enPSypx                   \
              !TGB_enPSypy                   \
              !TGB_enPSypz                   \
              !TGB_enPSxpy                   \
              !TGB_enPSzpy                   \
              !TBG_HDF5                      \
              !TBG_sumEnergy                 \
              !TBG_radiation_He              \
              !TBG_radiation_N               \
              --e_macroParticlesCount.period 100 --en_macroParticlesCount.period 100 --n_macroParticlesCount.period 100 "


#################################
## Section: Program Parameters ##
#################################

TBG_devices="-d !TBG_gpu_x !TBG_gpu_y !TBG_gpu_z"

TBG_programParams="!TBG_devices      \
                   !TBG_gridSize     \
                   !TBG_steps        \
                   !TBG_movingWindow \
                   !TBG_plugins --checkpoints 5000 | tee output"

# TOTAL number of GPUs
TBG_tasks="$(( TBG_gpu_x * TBG_gpu_y * TBG_gpu_z ))"

"$TBG_cfgPath"/submitAction.sh
